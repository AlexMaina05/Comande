<html>
  <head>
    <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin="" />
    <link
      rel="stylesheet"
      as="style"
      onload="this.rel='stylesheet'"
      href="https://fonts.googleapis.com/css2?display=swap&amp;family=Manrope%3Awght%40400%3B500%3B700%3B800&amp;family=Noto+Sans%3Awght%40400%3B500%3B700%3B900"
    />

    <title>Stitch Design - Menu</title>
    <link rel="icon" type="image/x-icon" href="data:image/x-icon;base64," />

    <script src="https://cdn.tailwindcss.com?plugins=forms,container-queries"></script>
    <style>
      .nav-item-active p, .nav-item-active div[data-icon] {
        color: white !important;
      }
    </style>
  </head>
  <body>
    <div
      class="relative flex size-full min-h-screen flex-col bg-[#231020] dark justify-between group/design-root overflow-x-hidden"
      style='font-family: Manrope, "Noto Sans", sans-serif;'
    >
      <div id="menu-content-area" class="pb-20"> {/* Added padding for nav bar */}
        <div class="flex items-center bg-[#231020] p-4 pb-2 justify-between sticky top-0 z-10">
          <div class="text-white flex size-12 shrink-0 items-center" data-icon="ArrowLeft" data-size="24px" data-weight="regular" onclick="history.back()" style="cursor: pointer;">
            <svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" fill="currentColor" viewBox="0 0 256 256">
              <path d="M224,128a8,8,0,0,1-8,8H59.31l58.35,58.34a8,8,0,0,1-11.32,11.32l-72-72a8,8,0,0,1,0-11.32l72-72a8,8,0,0,1,11.32,11.32L59.31,120H216A8,8,0,0,1,224,128Z"></path>
            </svg>
          </div>
          <h2 class="text-white text-lg font-bold leading-tight tracking-[-0.015em] flex-1 text-center pr-12">Menu</h2>
        </div>
        
        <div id="menu-categories-container">
            {/* Categories will be dynamically populated here */}
        </div>
        <div id="loading-error-message" class="text-center p-4 text-white">Caricamento menu...</div>

      </div>
      
      {/* Bottom Navigation Bar */}
      <div class="fixed bottom-0 left-0 right-0 z-10">
        <div class="flex gap-2 border-t border-[#492242] bg-[#34182f] px-4 pb-3 pt-2">
          <a id="nav-tables" class="nav-item just flex flex-1 flex-col items-center justify-end gap-1 text-[#cb90c1]" href="Reservation">
            <div class="text-[#cb90c1] flex h-8 items-center justify-center" data-icon="Table" data-size="24px" data-weight="regular">
              <svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" fill="currentColor" viewBox="0 0 256 256"><path d="M224,48H32a8,8,0,0,0-8,8V192a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A8,8,0,0,0,224,48ZM40,112H80v32H40Zm56,0H216v32H96ZM216,64V96H40V64ZM40,160H80v32H40Zm176,32H96V160H216v32Z"></path></svg>
            </div>
            <p class="text-[#cb90c1] text-xs font-medium leading-normal tracking-[0.015em]">Tables</p>
          </a>
          <a id="nav-orders" class="nav-item just flex flex-1 flex-col items-center justify-end gap-1 text-[#cb90c1]" href="Order">
            <div class="text-[#cb90c1] flex h-8 items-center justify-center" data-icon="Receipt" data-size="24px" data-weight="regular">
              <svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" fill="currentColor" viewBox="0 0 256 256"><path d="M72,104a8,8,0,0,1,8-8h96a8,8,0,0,1,0,16H80A8,8,0,0,1,72,104Zm8,40h96a8,8,0,0,0,0-16H80a8,8,0,0,0,0,16ZM232,56V208a8,8,0,0,1-11.58,7.15L192,200.94l-28.42,14.21a8,8,0,0,1-7.16,0L128,200.94,99.58,215.15a8,8,0,0,1-7.16,0L64,200.94,35.58,215.15A8,8,0,0,1,24,208V56A16,16,0,0,1,40,40H216A16,16,0,0,1,232,56Zm-16,0H40V195.06l20.42-10.22a8,8,0,0,1,7.16,0L96,199.06l28.42-14.22a8,8,0,0,1,7.16,0L160,199.06l28.42-14.22a8,8,0,0,1,7.16,0L216,195.06Z"></path></svg>
            </div>
            <p class="text-[#cb90c1] text-xs font-medium leading-normal tracking-[0.015em]">Orders</p>
          </a>
          <a id="nav-menu" class="nav-item just flex flex-1 flex-col items-center justify-end gap-1 text-[#cb90c1]" href="Menu"> {/* Initially not active, JS will set it */}
            <div class="text-[#cb90c1] flex h-8 items-center justify-center" data-icon="ForkKnife" data-size="24px" data-weight="fill">
              <svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" fill="currentColor" viewBox="0 0 256 256"><path d="M216,40V224a8,8,0,0,1-16,0V176H152a8,8,0,0,1-8-8,268.75,268.75,0,0,1,7.22-56.88c9.78-40.49,28.32-67.63,53.63-78.47A8,8,0,0,1,216,40Zm-96.11-1.31a8,8,0,1,0-15.78,2.63L111.89,88H88V40a8,8,0,0,0-16,0V88H48.11l7.78-46.68a8,8,0,1,0-15.78-2.63l-8,48A8.17,8.17,0,0,0,32,88a48.07,48.07,0,0,0,40,47.32V224a8,8,0,0,0,16,0V135.32A48.07,48.07,0,0,0,128,88a8.17,8.17,0,0,0-.11-1.31Z"></path></svg>
            </div>
            <p class="text-[#cb90c1] text-xs font-medium leading-normal tracking-[0.015em]">Menu</p>
          </a>
          <a id="nav-settings" class="nav-item just flex flex-1 flex-col items-center justify-end gap-1 text-[#cb90c1]" href="#">
            <div class="text-[#cb90c1] flex h-8 items-center justify-center" data-icon="Gear" data-size="24px" data-weight="regular">
              <svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" fill="currentColor" viewBox="0 0 256 256"><path d="M128,80a48,48,0,1,0,48,48A48.05,48.05,0,0,0,128,80Zm0,80a32,32,0,1,1,32-32A32,32,0,0,1,128,160Zm88-29.84q.06-2.16,0-4.32l14.92-18.64a8,8,0,0,0,1.48-7.06,107.21,107.21,0,0,0-10.88-26.25,8,8,0,0,0-6-3.93l-23.72-2.64q-1.48-1.56-3-3L186,40.54a8,8,0,0,0-3.94-6,107.71,107.71,0,0,0-26.25-10.87,8,8,0,0,0-7.06,1.49L130.16,40Q128,40,125.84,40L107.2,25.11a8,8,0,0,0-7.06-1.48A107.6,107.6,0,0,0,73.89,34.51a8,8,0,0,0-3.93,6L67.32,64.27q-1.56,1.49-3,3L40.54,70a8,8,0,0,0-6,3.94,107.71,107.71,0,0,0-10.87,26.25,8,8,0,0,0,1.49,7.06L40,125.84Q40,128,40,130.16L25.11,148.8a8,8,0,0,0-1.48,7.06,107.21,107.21,0,0,0,10.88,26.25,8,8,0,0,0,6,3.93l23.72,2.64q1.49,1.56,3,3L70,215.46a8,8,0,0,0,3.94,6,107.71,107.71,0,0,0,26.25,10.87,8,8,0,0,0,7.06-1.49L125.84,216q2.16.06,4.32,0l18.64,14.92a8,8,0,0,0,7.06,1.48,107.21,107.21,0,0,0,26.25-10.88,8,8,0,0,0,3.93-6l2.64-23.72q1.56-1.48,3-3L215.46,186a8,8,0,0,0,6-3.94,107.71,107.71,0,0,0,10.87-26.25,8,8,0,0,0-1.49-7.06Zm-16.1-6.5a73.93,73.93,0,0,1,0,8.68,8,8,0,0,0,1.74,5.48l14.19,17.73a91.57,91.57,0,0,1-6.23,15L187,173.11a8,8,0,0,0-5.1,2.64,74.11,74.11,0,0,1-6.14,6.14,8,8,0,0,0-2.64,5.1l-2.51,22.58a91.32,91.32,0,0,1-15,6.23l-17.74-14.19a8,8,0,0,0-5-1.75h-.48a73.93,73.93,0,0,1-8.68,0,8,8,0,0,0-5.48,1.74L100.45,215.8a91.57,91.57,0,0,1-15-6.23L82.89,187a8,8,0,0,0-2.64-5.1,74.11,74.11,0,0,1-6.14-6.14,8,8,0,0,0-5.1-2.64L46.43,170.6a91.32,91.32,0,0,1-6.23-15l14.19-17.74a8,8,0,0,0,1.74-5.48,73.93,73.93,0,0,1,0-8.68,8,8,0,0,0-1.74-5.48L40.2,100.45a91.57,91.57,0,0,1,6.23-15L69,82.89a8,8,0,0,0,5.1-2.64,74.11,74.11,0,0,1,6.14-6.14A8,8,0,0,0,82.89,69L85.4,46.43a91.32,91.32,0,0,1,15-6.23l17.74,14.19a8,8,0,0,0,5.48,1.74,73.93,73.93,0,0,1,8.68,0,8,8,0,0,0,5.48-1.74L155.55,40.2a91.57,91.57,0,0,1,15,6.23L173.11,69a8,8,0,0,0,2.64,5.1,74.11,74.11,0,0,1,6.14,6.14,8,8,0,0,0,5.1,2.64l22.58,2.51a91.32,91.32,0,0,1,6.23,15l-14.19,17.74A8,8,0,0,0,199.87,123.66Z"></path></svg>
            </div>
            <p class="text-[#cb90c1] text-xs font-medium leading-normal tracking-[0.015em]">Settings</p>
          </a>
        </div>
        <div class="h-5 bg-[#34182f]"></div> 
      </div>
    </div>

    <script>
      document.addEventListener('DOMContentLoaded', async () => {
        const menuCategoriesContainer = document.getElementById('menu-categories-container');
        const loadingErrorMsgEl = document.getElementById('loading-error-message');
        
        const categoryDisplayMap = {
          'appetizer': 'Appetizers',
          'main_course': 'Main Courses',
          'dessert': 'Desserts',
          'beverage': 'Beverages',
        };
        const categoryOrder = ['appetizer', 'main_course', 'dessert', 'beverage'];

        function createMenuItemElement(item) {
          const itemWrapperDiv = document.createElement('div');
          itemWrapperDiv.className = 'p-4';
          const itemContentDiv = document.createElement('div');
          itemContentDiv.className = 'flex items-stretch justify-between gap-4 rounded-xl';
          const textContentDiv = document.createElement('div');
          textContentDiv.className = 'flex flex-col gap-1 flex-[2_2_0px]';
          const priceP = document.createElement('p');
          priceP.className = 'text-[#cb90c1] text-sm font-normal leading-normal';
          priceP.textContent = \`$\${item.price.toFixed(2)}\`;
          const nameP = document.createElement('p');
          nameP.className = 'text-white text-base font-bold leading-tight';
          nameP.textContent = item.name;
          const descriptionP = document.createElement('p');
          descriptionP.className = 'text-[#cb90c1] text-sm font-normal leading-normal';
          descriptionP.textContent = item.description || ''; 
          textContentDiv.appendChild(priceP);
          textContentDiv.appendChild(nameP);
          textContentDiv.appendChild(descriptionP);
          const imageDiv = document.createElement('div');
          imageDiv.className = 'w-full bg-center bg-no-repeat aspect-video bg-cover rounded-xl flex-1';
          if (item.image_url && item.image_url.trim() !== '') {
            imageDiv.style.backgroundImage = \`url('\${item.image_url}')\`;
          } else {
            imageDiv.style.backgroundColor = '#3a1a34'; 
          }
          itemContentDiv.appendChild(textContentDiv);
          itemContentDiv.appendChild(imageDiv);
          itemWrapperDiv.appendChild(itemContentDiv);
          return itemWrapperDiv;
        }
        
        function showMessage(element, message, isError = true) {
            element.textContent = message;
            element.className = isError ? 'text-red-500 p-4 text-center' : 'text-white p-4 text-center';
        }

        // Set initial loading message
        showMessage(loadingErrorMsgEl, 'Caricamento menu...', false);

        try {
          const response = await fetch('/api/menu_items');
          if (!response.ok) {
            throw new Error(\`Errore HTTP! Status: \${response.status}\`);
          }
          const menuItems = await response.json();
          
          if (!menuItems || menuItems.length === 0) {
            showMessage(loadingErrorMsgEl, 'Il menu è attualmente vuoto.', false);
            return;
          }
          
          loadingErrorMsgEl.textContent = ''; // Clear loading message on success
          menuCategoriesContainer.innerHTML = ''; 

          const groupedByCategory = menuItems.reduce((acc, item) => {
            const category = item.category.toLowerCase();
            if (!acc[category]) acc[category] = [];
            acc[category].push(item);
            return acc;
          }, {});
          
          for (const categoryKey of categoryOrder) {
            const displayName = categoryDisplayMap[categoryKey] || categoryKey.charAt(0).toUpperCase() + categoryKey.slice(1);
            const categoryHeading = document.createElement('h2');
            categoryHeading.className = 'text-white text-[22px] font-bold leading-tight tracking-[-0.015em] px-4 pb-3 pt-5';
            categoryHeading.textContent = displayName;
            menuCategoriesContainer.appendChild(categoryHeading);

            const categoryItemList = document.createElement('div');
            categoryItemList.id = \`menu-container-\${categoryKey}\`;
            categoryItemList.className = 'category-item-list';
            
            if (groupedByCategory[categoryKey] && groupedByCategory[categoryKey].length > 0) {
              groupedByCategory[categoryKey].forEach(item => {
                const menuItemElement = createMenuItemElement(item);
                categoryItemList.appendChild(menuItemElement);
              });
            } else {
              const noItemsP = document.createElement('p');
              noItemsP.className = 'text-[#cb90c1] px-4 pb-3 text-sm';
              noItemsP.textContent = 'Nessun articolo in questa categoria al momento.';
              categoryItemList.appendChild(noItemsP);
            }
            menuCategoriesContainer.appendChild(categoryItemList);
          }
          
          for (const categoryKey in groupedByCategory) {
             if (!categoryOrder.includes(categoryKey)) {
                const displayName = categoryDisplayMap[categoryKey] || categoryKey.charAt(0).toUpperCase() + categoryKey.slice(1);
                const categoryHeading = document.createElement('h2');
                categoryHeading.className = 'text-white text-[22px] font-bold leading-tight tracking-[-0.015em] px-4 pb-3 pt-5';
                categoryHeading.textContent = displayName;
                menuCategoriesContainer.appendChild(categoryHeading);

                const categoryItemList = document.createElement('div');
                categoryItemList.id = \`menu-container-\${categoryKey}\`;
                categoryItemList.className = 'category-item-list';
                
                groupedByCategory[categoryKey].forEach(item => {
                    const menuItemElement = createMenuItemElement(item);
                    categoryItemList.appendChild(menuItemElement);
                });
                menuCategoriesContainer.appendChild(categoryItemList);
             }
          }
        } catch (error) {
          console.error('Failed to load menu items:', error);
          showMessage(loadingErrorMsgEl, \`Errore nel caricare il menu: \${error.message}\`, true);
          menuCategoriesContainer.innerHTML = ''; 
        }

        function setActiveNavItem() {
            document.querySelectorAll('.nav-item').forEach(item => item.classList.remove('nav-item-active'));
            const currentNavItem = document.getElementById('nav-menu'); // 'nav-menu' for Menu.html
            if (currentNavItem) {
                currentNavItem.classList.add('nav-item-active');
            }
        }
        setActiveNavItem();
      });
    </script>
  </body>
</html>
